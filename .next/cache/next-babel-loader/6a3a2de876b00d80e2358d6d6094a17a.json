{"ast":null,"code":"var _jsxFileName = \"/Users/emeliesabel/Desktop/hyper-island/PROJECTS/portfolio-project/pages/[page].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/* ðŸŒˆ This is the client side ðŸŒˆ*/\n\n/* dependencies */\nimport fetch from \"isomorphic-unfetch\";\n/* layout */\n\nimport DefaultLayout from \"../components/layouts/DefaultLayout\";\n/* components */\n\nimport HeadlineModule from \"../components/modules/HeadlineModule/Headline\";\nimport ParagraphModule from \"../components/modules/ParagraphModule/Paragraph\";\nimport ImageModule from \"../components/modules/ImageModule/Image\";\n\nfunction fetchUrl(url) {\n  return fetch(url).then(r => r.json());\n}\n/* This route gets hit when our user appends a slug to\nthe url and therefore the page request, e.g. your-site.com/about */\n\n\nconst SlugPage = ({\n  data\n}) => {\n  const {\n    content\n  } = data;\n  const codeString = JSON.stringify(content);\n  const headlineModuleData = content.body.find(item => item.component === 'Headline Module');\n  const imageModuleData = content.body.find(item => item.component === 'Image Module');\n  const paragraphModuleData = content.body.find(item => item.component === 'Paragraph Module');\n  const navbarModuleData = content.body.find(item => item.component === 'Navbar Module');\n  return __jsx(DefaultLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, headlineModuleData ? __jsx(HeadlineModule, {\n    title: headlineModuleData.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }) : null, imageModuleData ? __jsx(ImageModule, {\n    image: imageModuleData.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }) : null, paragraphModuleData ? __jsx(ParagraphModule, {\n    copy: paragraphModuleData.copy,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }) : null, navbarModuleData ? __jsx(NavbarModule, {\n    link: paragraphModuleData.link,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }) : null);\n};\n/* Before rendering, we are calling our internal API endpoint (server).\nThis call is hitting the code we wrote in 'pages/api/page/[slug].js' */\n\n\nSlugPage.getInitialProps = async ({\n  query\n}) => {\n  /* {query} is an object we receive within this method from Next,\n  so that we can retrieve the slug (e.g. '/welcome') coming with the route */\n  const {\n    page\n  } = query;\n  /* Calling our internal api endpoint so that we can fetch Storyblok content\n  server-side (we are on client-side here) */\n\n  const data = await fetchUrl(`http://localhost:3000/api/page/${page}`);\n  /* Returning the data back into SlugPage as props */\n\n  return {\n    data\n  };\n  /* This is the same as { data: data } */\n};\n\nexport default SlugPage;","map":{"version":3,"sources":["/Users/emeliesabel/Desktop/hyper-island/PROJECTS/portfolio-project/pages/[page].js"],"names":["fetch","DefaultLayout","HeadlineModule","ParagraphModule","ImageModule","fetchUrl","url","then","r","json","SlugPage","data","content","codeString","JSON","stringify","headlineModuleData","body","find","item","component","imageModuleData","paragraphModuleData","navbarModuleData","text","image","copy","link","getInitialProps","query","page"],"mappings":";;;;AAAA;;AAEA;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA;;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AAEA;;AACA,OAAOC,cAAP,MAA2B,+CAA3B;AACA,OAAOC,eAAP,MAA4B,iDAA5B;AACA,OAAOC,WAAP,MAAwB,yCAAxB;;AAEA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,SAAON,KAAK,CAACM,GAAD,CAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACD;AAED;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAcD,IAApB;AACA,QAAME,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAeH,OAAf,CAAnB;AAEA,QAAMI,kBAAkB,GAAGJ,OAAO,CAACK,IAAR,CAAaC,IAAb,CAC3BC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmB,iBADA,CAA3B;AAGA,QAAMC,eAAe,GAAGT,OAAO,CAACK,IAAR,CAAaC,IAAb,CACtBC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmB,cADL,CAAxB;AAGA,QAAME,mBAAmB,GAAGV,OAAO,CAACK,IAAR,CAAaC,IAAb,CAC1BC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmB,kBADD,CAA5B;AAGA,QAAMG,gBAAgB,GAAGX,OAAO,CAACK,IAAR,CAAaC,IAAb,CACvBC,IAAI,IAAIA,IAAI,CAACC,SAAL,KAAmB,eADJ,CAAzB;AAIA,SACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEHJ,kBAAkB,GACX,MAAC,cAAD;AAAgB,IAAA,KAAK,EAAEA,kBAAkB,CAACQ,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADW,GAET,IAJN,EAMGH,eAAe,GAChB,MAAC,WAAD;AAAa,IAAA,KAAK,EAAEA,eAAe,CAACI,KAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADgB,GAEZ,IARN,EAUGH,mBAAmB,GAClB,MAAC,eAAD;AAAiB,IAAA,IAAI,EAAEA,mBAAmB,CAACI,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADkB,GAEhB,IAZN,EAcGH,gBAAgB,GACf,MAAC,YAAD;AAAc,IAAA,IAAI,EAAED,mBAAmB,CAACK,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADe,GAEb,IAhBN,CADF;AAsBD,CAvCD;AAyCA;;;;AAEAjB,QAAQ,CAACkB,eAAT,GAA2B,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC9C;;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAWD,KAAjB;AACA;;;AAEA,QAAMlB,IAAI,GAAG,MAAMN,QAAQ,CAAE,kCAAiCyB,IAAK,EAAxC,CAA3B;AACA;;AACA,SAAO;AAAEnB,IAAAA;AAAF,GAAP;AAAiB;AAClB,CATD;;AAWA,eAAeD,QAAf","sourcesContent":["/* ðŸŒˆ This is the client side ðŸŒˆ*/\n\n/* dependencies */\nimport fetch from \"isomorphic-unfetch\";\n\n/* layout */\nimport DefaultLayout from \"../components/layouts/DefaultLayout\";\n\n/* components */\nimport HeadlineModule from \"../components/modules/HeadlineModule/Headline\";\nimport ParagraphModule from \"../components/modules/ParagraphModule/Paragraph\";\nimport ImageModule from \"../components/modules/ImageModule/Image\";\n\nfunction fetchUrl(url) {\n  return fetch(url).then(r => r.json());\n}\n\n/* This route gets hit when our user appends a slug to\nthe url and therefore the page request, e.g. your-site.com/about */\nconst SlugPage = ({ data }) => {\n  const { content } = data;\n  const codeString = JSON.stringify(content);\n\n  const headlineModuleData = content.body.find(\n\t\titem => item.component === 'Headline Module'\n\t);\n  const imageModuleData = content.body.find(\n    item => item.component === 'Image Module'\n  );\n  const paragraphModuleData = content.body.find(\n    item => item.component === 'Paragraph Module'\n  );\n  const navbarModuleData = content.body.find(\n    item => item.component === 'Navbar Module'\n  );\n\n  return (\n    <DefaultLayout>\n\n{headlineModuleData ? (\n        <HeadlineModule title={headlineModuleData.text} />\n      ) : null}\n\n      {imageModuleData ? ( \n      <ImageModule image={imageModuleData.image} /> \n      ) : null}\n\n      {paragraphModuleData ? (\n        <ParagraphModule copy={paragraphModuleData.copy} />\n      ) : null}   \n\n      {navbarModuleData ? (\n        <NavbarModule link={paragraphModuleData.link} />\n      ) : null}\n\n    </DefaultLayout>\n\n  );\n};\n\n/* Before rendering, we are calling our internal API endpoint (server).\nThis call is hitting the code we wrote in 'pages/api/page/[slug].js' */\nSlugPage.getInitialProps = async ({ query }) => {\n  /* {query} is an object we receive within this method from Next,\n\tso that we can retrieve the slug (e.g. '/welcome') coming with the route */\n  const { page } = query;\n  /* Calling our internal api endpoint so that we can fetch Storyblok content\n\tserver-side (we are on client-side here) */\n  const data = await fetchUrl(`http://localhost:3000/api/page/${page}`);\n  /* Returning the data back into SlugPage as props */\n  return { data }; /* This is the same as { data: data } */\n};\n\nexport default SlugPage;\n"]},"metadata":{},"sourceType":"module"}