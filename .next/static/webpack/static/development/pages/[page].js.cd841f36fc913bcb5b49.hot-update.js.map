{"version":3,"file":"static/webpack/static/development/pages/[page].js.cd841f36fc913bcb5b49.hot-update.js","sources":["webpack:///./pages/[page].js"],"sourcesContent":["/* ðŸŒˆ This is the client side ðŸŒˆ*/\n\n/* dependencies */\nimport fetch from \"isomorphic-unfetch\";\n\n/* layout */\nimport DefaultLayout from \"../components/layouts/DefaultLayout\";\n\n/* components */\nimport HeadlineModule from \"../components/modules/HeadlineModule/Headline\";\nimport ParagraphModule from \"../components/modules/ParagraphModule/Paragraph\";\nimport ImageModule from \"../components/modules/ImageModule/Image\";\n\nfunction fetchUrl(url) {\n  return fetch(url).then(r => r.json());\n}\n\n/* This route gets hit when our user appends a slug to\nthe url and therefore the page request, e.g. your-site.com/about */\nconst SlugPage = ({ data }) => {\n  const { content } = data;\n  const codeString = JSON.stringify(content);\n\n  const headlineModuleData = content.body.find(\n\t\titem => item.component === 'Headline Module'\n\t);\n  const imageModuleData = content.body.find(\n    item => item.component === 'Image Module'\n  );\n  const paragraphModuleData = content.body.find(\n    item => item.component === 'Paragraph Module'\n  );\n  const navbarModuleData = content.body.find(\n    item => item.component === 'Navbar Module'\n  );\n\n  return (\n    <DefaultLayout>\n\n      {headlineModuleData ? (\n        <HeadlineModule title={headlineModuleData.text} />\n      ) : null}\n\n      {imageModuleData ? ( \n      <ImageModule image={imageModuleData.image} /> \n      ) : null}\n\n      {paragraphModuleData ? (\n        <ParagraphModule copy={paragraphModuleData.copy} />\n      ) : null}   \n\n      {navbarModuleData ? (\n        <NavbarModule link={paragraphModuleData.link} />\n      ) : null}\n\n    </DefaultLayout>\n\n  );\n};\n\n/* Before rendering, we are calling our internal API endpoint (server).\nThis call is hitting the code we wrote in 'pages/api/page/[slug].js' */\nSlugPage.getInitialProps = async ({ query }) => {\n  /* {query} is an object we receive within this method from Next,\n\tso that we can retrieve the slug (e.g. '/welcome') coming with the route */\n  const { page } = query;\n  /* Calling our internal api endpoint so that we can fetch Storyblok content\n\tserver-side (we are on client-side here) */\n  const data = await fetchUrl(`https://portfolio-project-sigma.now.sh/api/page/${page}`);\n  /* Returning the data back into SlugPage as props */\n  return { data }; /* This is the same as { data: data } */\n};\n\nexport default SlugPage;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AAEA;;;;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAEA;AACA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAEA;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;;AAEA;AACA;;;AAJA;AAAA;AACA;AADA;AAMA;AANA;AAQA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;;;;A","sourceRoot":""}